<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
    <property scope="context" name="path" value="/apps/logs/log1"/>
    <property scope="context" name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS}|%-5level|%logger{35} - %msg%n"/>

    <if condition='property("HOSTNAME").contains("lin")'>
        <then>
            <!-- 异常 -->
            <appender name="srv" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.LevelFilter">
                    <level>ERROR</level>
                    <onMatch>ACCEPT</onMatch>
                    <onMismatch>DENY</onMismatch>
                </filter>
                <file>${path}/srv/srv.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${path}/srv/srv.%i.log.zip</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>20</maxIndex>
                </rollingPolicy>

                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>20MB</maxFileSize>
                </triggeringPolicy>
                <encoder>
                    <charset>UTF-8</charset>
                    <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}|%-5level|%logger{35} - %msg|"%ex{full}"%n</pattern>
                </encoder>
            </appender>
            <!-- debug -->
            <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file>${path}/debug/debug.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${path}/debug/debug.%i.log.zip</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>10</maxIndex>
                </rollingPolicy>

                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>50MB</maxFileSize>
                </triggeringPolicy>
                <encoder>
                    <charset>UTF-8</charset>
                    <pattern>${pattern}</pattern>
                </encoder>
            </appender>
            <!-- 接口 -->
            <appender name="inf" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.LevelFilter">
                    <level>INFO</level>
                    <onMatch>ACCEPT</onMatch>
                    <onMismatch>DENY</onMismatch>
                </filter>
                <file>${path}/inf/inf.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${path}/inf/inf.%i.log.zip</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>10</maxIndex>
                </rollingPolicy>

                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>10MB</maxFileSize>
                </triggeringPolicy>
                <encoder>
                    <charset>UTF-8</charset>
                    <pattern>${pattern}</pattern>
                </encoder>
            </appender>
            <!-- 外部接口 -->
            <appender name="sendinf" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.LevelFilter">
                    <level>INFO</level>
                    <onMatch>ACCEPT</onMatch>
                    <onMismatch>DENY</onMismatch>
                </filter>
                <file>${path}/sendinf/sendinf.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${path}/sendinf/sendinf.%i.log.zip</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>10</maxIndex>
                </rollingPolicy>

                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>10MB</maxFileSize>
                </triggeringPolicy>
                <encoder>
                    <charset>UTF-8</charset>
                    <pattern>${pattern}</pattern>
                </encoder>
            </appender>
            <root level="ERROR">
                <appender-ref ref="srv"/>
            </root>
            <logger name="com.hermes" level="DEBUG">
                <appender-ref ref="debug"/>
            </logger>
            <logger name="inf" level="INFO">
                <appender-ref ref="inf"/>
            </logger>
            <logger name="sendinf" level="INFO">
                <appender-ref ref="sendinf"/>
            </logger>
            <logger name="com.hermes.app.service" level="ERROR"></logger>
        </then>
        <else>
            <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
                <layout class="ch.qos.logback.classic.PatternLayout">
                    <Pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>
                </layout>
            </appender>

            <logger name="org.springframework.core" level="INFO"/>
            <logger name="org.springframework.beans" level="INFO"/>
            <logger name="org.springframework.context" level="INFO"/>
            <logger name="org.springframework.web" level="DEBUG"/>

            <logger name="com.hermes.app.persistence" level="DEBUG"/>

            <root level="DEBUG">
                <appender-ref ref="STDOUT"/>
            </root>
        </else>
    </if>

</configuration>